{"ast":null,"code":"Object.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar React = require('react');\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n\nvar generateCartState = function (currentCartState, items) {\n  var totalUniqueItems = calculateUniqueItems(items);\n  var isEmpty = totalUniqueItems === 0;\n  return __assign(__assign({}, currentCartState), {\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems: totalUniqueItems,\n    totalCost: calculateCartTotal(items),\n    isEmpty: isEmpty\n  });\n};\n\nvar calculateItemTotals = function (items) {\n  return items.map(function (item) {\n    return __assign(__assign({}, item), {\n      itemTotal: item.price * item.quantity\n    });\n  });\n};\n\nvar calculateTotalItems = function (items) {\n  return items.reduce(function (sum, item) {\n    return sum + item.quantity;\n  }, 0);\n};\n\nvar calculateCartTotal = function (items) {\n  return items.reduce(function (total, item) {\n    return total + item.quantity * item.price;\n  }, 0);\n};\n\nvar calculateUniqueItems = function (items) {\n  return items.length;\n};\n\nvar cartReducer = function (state, action) {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      {\n        var items = __spreadArrays(state.items, [action.payload.item]);\n\n        return generateCartState(state, items);\n      }\n\n    case \"UPDATE_ITEM\":\n      {\n        var items = state.items.map(function (item) {\n          if (item.id !== action.payload.idToUpdate) return item;\n          return __assign(__assign({}, item), action.payload.item);\n        });\n        return generateCartState(state, items);\n      }\n\n    case \"REMOVE_ITEM\":\n      {\n        var items = state.items.filter(function (item) {\n          return item.id !== action.payload.idToRemove;\n        });\n        return generateCartState(state, items);\n      }\n\n    case \"CLEAR_CART\":\n      return __assign({}, action.payload.initialCartState);\n  }\n}; // Credit: \"Easy to understand React Hook recipes by Gabe Ragland\"\n\n\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  var _a = React.useState(function () {\n    try {\n      // Get from local storage by key\n      var item = window.localStorage.getItem(key); // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  }),\n      storedValue = _a[0],\n      setStoredValue = _a[1]; // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n\n\n  var setValue = function (value) {\n    try {\n      // Allow value to be a function so we have same API as useState\n      var valueToStore = value instanceof Function ? value(storedValue) : value; // Save state\n\n      setStoredValue(valueToStore); // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nvar createContext = React.createContext,\n    useContext = React.useContext,\n    useReducer = React.useReducer,\n    useEffect = React.useEffect;\nvar initialState = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  totalCost: 0\n};\nvar CartContext = createContext(initialState);\n\nvar useCart = function () {\n  // This makes sure that the cart functions are always\n  var context = useContext(CartContext);\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n  return context;\n};\n\nvar CartProvider = function (_a) {\n  var children = _a.children,\n      _b = _a.storage,\n      storage = _b === void 0 ? useLocalStorage : _b;\n\n  var _c = storage(\"react-use-cart\", JSON.stringify(__assign({}, initialState))),\n      savedCart = _c[0],\n      saveCart = _c[1];\n\n  var _d = useReducer(cartReducer, JSON.parse(savedCart)),\n      cartState = _d[0],\n      dispatchCartState = _d[1];\n\n  useEffect(function () {\n    saveCart(JSON.stringify(cartState));\n  }, [cartState, saveCart]);\n\n  var addItem = function (item, quantity) {\n    if (quantity === void 0) {\n      quantity = 1;\n    }\n\n    if (quantity < 1) return;\n    if (item.id === undefined) throw new Error(\"Item object must have an \\\"id\\\" property.\");\n    if (item.price === undefined) throw new Error(\"Item object must have a \\\"price\\\" property.\");\n    var currentItem = cartState.items.find(function (i) {\n      return i.id === item.id;\n    });\n\n    if (currentItem) {\n      var payload = {\n        item: __assign(__assign({}, item), {\n          quantity: currentItem.quantity + quantity\n        }),\n        idToUpdate: item.id\n      };\n      dispatchCartState({\n        type: \"UPDATE_ITEM\",\n        payload: payload\n      });\n    } else {\n      var payload = {\n        item: __assign(__assign({}, item), {\n          quantity: quantity\n        })\n      };\n      dispatchCartState({\n        type: \"ADD_ITEM\",\n        payload: payload\n      });\n    }\n  };\n\n  var removeItem = function (id) {\n    dispatchCartState({\n      type: \"REMOVE_ITEM\",\n      payload: {\n        idToRemove: id\n      }\n    });\n  };\n\n  var updateItem = function (id, updates) {\n    var currentItem = cartState.items.find(function (item) {\n      return item.id === id;\n    });\n    if (!currentItem) throw new Error(\"No Item with that id in Items array.\");\n\n    var item = __assign(__assign({}, currentItem), updates);\n\n    dispatchCartState({\n      type: \"UPDATE_ITEM\",\n      payload: {\n        item: item,\n        idToUpdate: id\n      }\n    });\n  };\n\n  var updateItemQuantity = function (id, quantity) {\n    if (quantity <= 0) {\n      dispatchCartState({\n        type: \"REMOVE_ITEM\",\n        payload: {\n          idToRemove: id\n        }\n      });\n      return;\n    }\n\n    var currentItem = cartState.items.find(function (item) {\n      return item.id === id;\n    });\n    if (!currentItem) throw new Error(\"No Item with that id in Items array.\");\n\n    var item = __assign(__assign({}, currentItem), {\n      quantity: quantity\n    });\n\n    dispatchCartState({\n      type: \"UPDATE_ITEM\",\n      payload: {\n        item: item,\n        idToUpdate: id\n      }\n    });\n  };\n\n  var clearCart = function () {\n    var payload = {\n      initialCartState: initialState\n    };\n    dispatchCartState({\n      type: \"CLEAR_CART\",\n      payload: payload\n    });\n  };\n\n  var getItem = function (id) {\n    return cartState.items.find(function (item) {\n      return item.id === id;\n    });\n  };\n\n  var inCart = function (id) {\n    return cartState.items.some(function (item) {\n      return item.id === id;\n    });\n  };\n\n  return React.createElement(CartContext.Provider, {\n    value: __assign(__assign({}, cartState), {\n      addItem: addItem,\n      removeItem: removeItem,\n      updateItem: updateItem,\n      updateItemQuantity: updateItemQuantity,\n      clearCart: clearCart,\n      getItem: getItem,\n      inCart: inCart\n    })\n  }, children);\n};\n\nexports.CartProvider = CartProvider;\nexports.useCart = useCart;","map":{"version":3,"sources":["../src/cartReducer.ts","../src/useLocalStorage.ts","../src/index.tsx"],"names":["useState","React.createContext","React.createElement"],"mappings":"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","sourcesContent":["export interface Item {\r\n  id: string;\r\n  price: number;\r\n  quantity?: number;\r\n  itemTotal?: number;\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface InitialState {\r\n  items: Item[];\r\n  isEmpty: boolean;\r\n  totalItems: number;\r\n  totalUniqueItems: number;\r\n  totalCost: number;\r\n}\r\n\r\nexport interface CartState extends InitialState {\r\n  addItem: (item: Item, quantity?: number) => void;\r\n  removeItem: (id: Item[\"id\"]) => void;\r\n  updateItem: (id: Item[\"id\"], item: object) => void;\r\n  updateItemQuantity: (id: Item[\"id\"], quantity: number) => void;\r\n  clearCart: () => void;\r\n  getItem: (id: Item[\"id\"]) => Item | undefined;\r\n  inCart: (id: Item[\"id\"]) => boolean;\r\n}\r\n\r\nexport type Actions =\r\n  | { type: \"ADD_ITEM\"; payload: { item: Item } }\r\n  | { type: \"REMOVE_ITEM\"; payload: { idToRemove: Item[\"id\"] } }\r\n  | {\r\n      type: \"UPDATE_ITEM\";\r\n      payload: { item: Item; idToUpdate: Item[\"id\"] };\r\n    }\r\n  | { type: \"CLEAR_CART\"; payload: { initialCartState: InitialState } };\r\n\r\nconst generateCartState = (\r\n  currentCartState: CartState,\r\n  items: Item[]\r\n): CartState => {\r\n  const totalUniqueItems = calculateUniqueItems(items);\r\n  const isEmpty = totalUniqueItems === 0;\r\n\r\n  return {\r\n    ...currentCartState,\r\n    items: calculateItemTotals(items),\r\n    totalItems: calculateTotalItems(items),\r\n    totalUniqueItems,\r\n    totalCost: calculateCartTotal(items),\r\n    isEmpty,\r\n  };\r\n};\r\n\r\nconst calculateItemTotals = (items: Item[]): Item[] => {\r\n  return items.map((item) => ({\r\n    ...item,\r\n    itemTotal: item.price * item.quantity!,\r\n  }));\r\n};\r\n\r\nconst calculateTotalItems = (items: Item[]): number =>\r\n  items.reduce((sum, item) => sum + item.quantity!, 0);\r\n\r\nconst calculateCartTotal = (items: Item[]): number =>\r\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\r\n\r\nconst calculateUniqueItems = (items: Item[]): number => items.length;\r\n\r\nexport const cartReducer = (\r\n  state: CartState,\r\n  action: Actions\r\n): CartState | InitialState => {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\": {\r\n      const items = [...state.items, action.payload.item];\r\n\r\n      return generateCartState(state, items);\r\n    }\r\n    case \"UPDATE_ITEM\": {\r\n      const items = state.items.map((item) => {\r\n        if (item.id !== action.payload.idToUpdate) return item;\r\n\r\n        return {\r\n          ...item,\r\n          ...action.payload.item,\r\n        };\r\n      });\r\n\r\n      return generateCartState(state, items);\r\n    }\r\n    case \"REMOVE_ITEM\": {\r\n      const items = state.items.filter(\r\n        (item) => item.id !== action.payload.idToRemove\r\n      );\r\n\r\n      return generateCartState(state, items);\r\n    }\r\n    case \"CLEAR_CART\":\r\n      return { ...action.payload.initialCartState };\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\n\r\n// Credit: \"Easy to understand React Hook recipes by Gabe Ragland\"\r\n\r\nexport default function useLocalStorage<T>(key: string, initialValue: T) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState<T>(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value: T | ((val: T) => T)) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import * as React from \"react\";\r\nimport { cartReducer, CartState, Item } from \"./cartReducer\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nconst { createContext, useContext, useReducer, useEffect } = React;\r\n\r\nconst initialState: any = {\r\n  items: [],\r\n  isEmpty: true,\r\n  totalItems: 0,\r\n  totalUniqueItems: 0,\r\n  totalCost: 0,\r\n};\r\n\r\nconst CartContext = createContext<CartState | undefined>(initialState);\r\n\r\nexport const useCart = () => {\r\n  // This makes sure that the cart functions are always\r\n  const context = useContext(CartContext);\r\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\r\n  return context;\r\n};\r\n\r\nexport const CartProvider: React.FC<{\r\n  children: React.ReactNode;\r\n  storage?: any;\r\n}> = ({ children, storage = useLocalStorage }) => {\r\n  const [savedCart, saveCart] = storage(\r\n    \"react-use-cart\",\r\n    JSON.stringify({\r\n      ...initialState,\r\n    })\r\n  );\r\n\r\n  const [cartState, dispatchCartState] = useReducer(\r\n    cartReducer,\r\n    JSON.parse(savedCart)\r\n  );\r\n\r\n  useEffect(() => {\r\n    saveCart(JSON.stringify(cartState));\r\n  }, [cartState, saveCart]);\r\n\r\n  const addItem = (item: Item, quantity: number = 1): void => {\r\n    if (quantity < 1) return;\r\n\r\n    if (item.id === undefined)\r\n      throw new Error(`Item object must have an \"id\" property.`);\r\n\r\n    if (item.price === undefined)\r\n      throw new Error(`Item object must have a \"price\" property.`);\r\n\r\n    const currentItem = cartState.items.find((i) => i.id === item.id);\r\n\r\n    if (currentItem) {\r\n      const payload = {\r\n        item: { ...item, quantity: currentItem.quantity! + quantity },\r\n        idToUpdate: item.id,\r\n      };\r\n\r\n      dispatchCartState({\r\n        type: \"UPDATE_ITEM\",\r\n        payload,\r\n      });\r\n    } else {\r\n      const payload = { item: { ...item, quantity } };\r\n      dispatchCartState({ type: \"ADD_ITEM\", payload });\r\n    }\r\n  };\r\n\r\n  const removeItem = (id: Item[\"id\"]): void => {\r\n    dispatchCartState({ type: \"REMOVE_ITEM\", payload: { idToRemove: id } });\r\n  };\r\n\r\n  const updateItem = (id: Item[\"id\"], updates: object) => {\r\n    const currentItem = cartState.items.find((item) => item.id === id);\r\n\r\n    if (!currentItem) throw new Error(\"No Item with that id in Items array.\");\r\n\r\n    const item = { ...currentItem, ...updates };\r\n\r\n    dispatchCartState({\r\n      type: \"UPDATE_ITEM\",\r\n      payload: { item, idToUpdate: id },\r\n    });\r\n  };\r\n\r\n  const updateItemQuantity = (id: Item[\"id\"], quantity: number): void => {\r\n    if (quantity <= 0) {\r\n      dispatchCartState({ type: \"REMOVE_ITEM\", payload: { idToRemove: id } });\r\n      return;\r\n    }\r\n\r\n    const currentItem = cartState.items.find((item) => item.id === id);\r\n\r\n    if (!currentItem) throw new Error(\"No Item with that id in Items array.\");\r\n\r\n    const item = { ...currentItem, quantity };\r\n\r\n    dispatchCartState({\r\n      type: \"UPDATE_ITEM\",\r\n      payload: { item, idToUpdate: id },\r\n    });\r\n  };\r\n\r\n  const clearCart = (): void => {\r\n    const payload = { initialCartState: initialState };\r\n    dispatchCartState({ type: \"CLEAR_CART\", payload });\r\n  };\r\n\r\n  const getItem = (id: Item[\"id\"]): Item | undefined =>\r\n    cartState.items.find((item) => item.id === id);\r\n\r\n  const inCart = (id: Item[\"id\"]): boolean =>\r\n    cartState.items.some((item) => item.id === id);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        ...cartState,\r\n        addItem,\r\n        removeItem,\r\n        updateItem,\r\n        updateItemQuantity,\r\n        clearCart,\r\n        getItem,\r\n        inCart,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"script"}